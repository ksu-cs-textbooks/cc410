<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Event Binding :: CC 410 Textbook</title>
    <link>https://textbooks.cs.ksu.edu/cc410/ii-gui/13-event-driven-programming/03-binding-events/video/index.html</link>
    <description>Resources Slides Video Script In this chapter, we’re going to learn about how we can use the concepts in the event-driven programming paradigm to update our GUI-based programs to respond to events. To begin, let’s look at what those events are and where they come from. When the user interacts with any GUI-based program, the operating system sends events back to our application based on what the user does. There are many different types of events that the operating system can tell us about, as we’ll see shortly. In our application’s code, we can choose a particular event type that is associated with an element in our GUI and bind that event to a specific object or function, known as an event handler. So, when our program receives an event of that type from the selected GUI element, our program will call the associated event handler and let it know that the event occurred. In this way, we can write programs that will quickly respond to any user interactions on our GUI.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Jan 2023 16:21:53 -0600</lastBuildDate>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/ii-gui/13-event-driven-programming/03-binding-events/video/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>