<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Race Conditions :: CC 410 Textbook</title><link>https://textbooks.cs.ksu.edu/cc410/ii-gui/12-parallelism/05-race-conditions/video/</link><description>Resources Slides Video Script Let’s take a look at a situation where two threads are trying to modify the same data structure and see how this could possibly lead to one of the major pitfalls of parallel programming - a race condition. Here, we are continuing our diagrams from the previous example, but now we’ve added a box in the middle to represent the shared data object, which is contained in the shared memory of the process that our application is running under.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 17 Jun 2024 14:13:48 -0500</lastBuildDate><atom:link href="https://textbooks.cs.ksu.edu/cc410/ii-gui/12-parallelism/05-race-conditions/video/index.xml" rel="self" type="application/rss+xml"/></channel></rss>