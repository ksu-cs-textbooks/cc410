<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Forms :: CC 410 Textbook</title>
    <link>https://textbooks.cs.ksu.edu/cc410/z-examples/12-forms/index.html</link>
    <description>In this example project, we’ll explore adding a simple search form to our existing movies website. This form will allow us to filter our movies based on a few criteria, and we’ll be able to explore how to receive form data in our web applications.&#xA;The next page will discuss the overall requirements that this example project should include. After that, there is a page for each programming language with some basic steps and a video to walk you through the whole process.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/z-examples/12-forms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Assignment Requirements</title>
      <link>https://textbooks.cs.ksu.edu/cc410/z-examples/12-forms/01-requirements/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/z-examples/12-forms/01-requirements/index.html</guid>
      <description>This page lists the example project requirements for Example 12 in CC 410. Read the requirements carefully and discuss any questions with the instructors or TAs.&#xA;Purpose This example will cover updating an existing project to include a lightweight web framework and generate dynamic web pages.&#xA;General Requirements All code must be object-oriented. All executable code must be within a class Python package files such as __init__.py and __main__.py are exempt. Classes must be organized into packages based on common usage. This project must include automation for compilation and execution. Java: Use Gradle with the application and jacoco plugins. The project should compile without errors. Python: Use tox configured to use Python 3.10 and a requirements file to install libraries. All code must properly compile or be interpreted. Java: It must compile using Gradle. Python: It must be interpreted using Python 3.10. Where specified, type hints should be included in the code, and all code should pass a strict Mypy type check. There are instances where Mypy is unable to determine the type of lambda expressions used as commands with buttons. This error can be ignored. Unit tests are not required. Documentation comments are not required for this example, but they are recommended for your own use. All code submitted must be free of style errors. We will be using the Google Style Guide for each language. Style errors related to documentation comments (or lack thereof) will be ignored. Java: Use Checkstyle 10.6.0+ and the Google Style Configuration. You may modify the configuration to allow 4 space indentations instead of 2 space indentations. Python: Use Flake8 with the flake8-docstrings and pep8-naming plugins. Code should conform to PEP 8 style with Google style docstrings. All HTML must conform to the HTML5 standard. Use the W3C Validator to check your rendered pages if desired. Submissions to Canvas should be tagged GitHub releases that are numbered according to Semantic Versioning. Assignment Requirements This milestone should include the following new GUI features:</description>
    </item>
    <item>
      <title>Java</title>
      <link>https://textbooks.cs.ksu.edu/cc410/z-examples/12-forms/02-java/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/z-examples/12-forms/02-java/index.html</guid>
      <description>Outline Here is a basic outline of the steps to follow to complete this example.&#xA;Clone Starter Code from GitHub git clone &lt;url&gt; java Install SDKMAN Instructions&#xA;curl -s &#34;https://get.sdkman.io&#34; | bash Close and Reopen Terminal to load SDK Man&#xA;Install Gradle&#xA;sdk install gradle 7.6 Compile, Run &amp; Test Existing Project cd java gradle run gradle check Confirm that project runs and has no style errors.</description>
    </item>
    <item>
      <title>Python</title>
      <link>https://textbooks.cs.ksu.edu/cc410/z-examples/12-forms/02-python/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/z-examples/12-forms/02-python/index.html</guid>
      <description>Outline Here is a basic outline of the steps to follow to complete this example.&#xA;Clone Starter Code from GitHub git clone &lt;url&gt; python Run Project cd python python3 -m src Install Tox pip3 install tox Check &amp; Test Existing Project python3 -m tox Confirm that project runs and has no style errors.</description>
    </item>
  </channel>
</rss>