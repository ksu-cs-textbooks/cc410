<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java Inheritance :: CC 410 Textbook</title>
    <link>https://textbooks.cs.ksu.edu/cc410/i-oop/06-inheritance-polymorphism/04-java-interfaces/video/index.html</link>
    <description>Resources Slides Video Script Let’s review inheritance in the Java programming language. First, we’ll look at interfaces. In Java, an interface is as special type of class, so we’ll use the interface keyword instead of the class keyword when declaring it. Inside of the interface, we typically only include methods that we want to be part of the interface. Any methods included in the interface are automatically public and abstract so we don’t have to include those modifiers on your methods. Likewise, if we do include any attributes, they will automatically be treated as if the public, static, and final modifiers are attached. Finally, it is important to remember that Java interfaces cannot be instantiated, so we don’t include an instructor. In addition, the methods themselves are abstract and don’t contain any code.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Aug 2021 16:38:27 -0500</lastBuildDate>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/06-inheritance-polymorphism/04-java-interfaces/video/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>