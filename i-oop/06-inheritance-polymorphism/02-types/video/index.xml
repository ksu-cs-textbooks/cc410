<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Types :: CC 410 Textbook</title>
    <link>https://textbooks.cs.ksu.edu/cc410/i-oop/06-inheritance-polymorphism/02-types/video/index.html</link>
    <description>Resources Slides Video Script In this chapter, we’re going to cover inheritance and polymorphism in object-oriented programming languages. This is a topic that comes up many times, and you may have already learned about it in the past. In this course, we’re going to dive a bit deeper into how it works and some of the theory behind it. Before we can do that, we should spend a little time talking about data types and how that relates to inheritance. Recall that most programming languages store data using a few primitive data types. For example, both Java and Python have a type called int that is used to store integers. There are other primitive data types for storing floating-point numbers, boolean values, and text data. Here, we’re referring to the Java String type as a primitive, even though it really is a class itself. But, in theory, we can treat it as a primitive for this use.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Aug 2021 16:38:27 -0500</lastBuildDate>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/06-inheritance-polymorphism/02-types/video/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>