<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://textbooks.cs.ksu.edu/cc410/i-oop/08-lambdas/02-lambda-calculus/video/slides/index.html</link>
    <description>Alonzo Church Image Credit: Wikipedia&#xA;Lambda Calculus Introduced in 1930 Used to describe computation Can be executed by any Turing machine Built around mathematical functions Programming Paradigms Functions as First-Class Citizens can store in variables&#xA;and use as arguments&#xA;Higher Order Functions accept other functions as input&#xA;Imperative const numList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]; let result = 0; for (let i = 0; i &lt; numList.length; i++) { if (numList[i] % 2 === 0) { result += numList[i] * 10; } } result = 20 -&gt; 60 -&gt; 120 -&gt; 200 -&gt; 300</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/08-lambdas/02-lambda-calculus/video/slides/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>