<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://textbooks.cs.ksu.edu/cc410/i-oop/08-lambdas/04-java-lambdas/video/slides/index.html</link>
    <description>Java Lambda (x, y) -&gt; x + y; Parameters in parentheses Arrow -&gt; Statement or block with curly braces Java Lambda public class Calculator {&#xA;interface IntegerMath { int operation(int a, int b); }&#xA;public int operateBinary(int a, int b, IntegerMath op) { return op.operation(a, b); }&#xA;public static void main(String... args) { Calculator myApp = new Calculator(); IntegerMath addition = (a, b) -&gt; a + b; IntegerMath subtraction = (a, b) -&gt; a - b; System.out.println(&#34;40 + 2 = &#34; + myApp.operateBinary(40, 2, addition)); System.out.println(&#34;20 - 10 = &#34; + myApp.operateBinary(20, 10, subtraction)); } } Java Lambda public static void processPersonsWithFunction( List roster, Predicate tester, Function mapper, Consumer block) { for (Person p : roster) { if (tester.test(p)) { String data = mapper.apply(p); block.accept(data); } } }&#xA;processPersonsWithFunction( roster, p -&gt; p.getGender() == Person.Sex.MALE &amp;&amp; p.getAge() &gt;= 18 &amp;&amp; p.getAge() &lt;= 25, p -&gt; p.getEmailAddress(), email -&gt; System.out.println(email) );</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/08-lambdas/04-java-lambdas/video/slides/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>