<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview :: CC 410 Textbook</title>
    <link>https://textbooks.cs.ksu.edu/cc410/i-oop/04-testing/02-manual-testing/video/index.html</link>
    <description>Resources Slides Video Script In this chapter, we’re discussing the many different ways we can test our code. Before we dive deeply into the test frameworks we’re going to be using, let’s step back and look at the big picture of software testing. There are two major categories of methods we can use to test our code. The first category is informal testing. For most of us, this is the type of testing we do naturally as we learn to program. We simply run our program, pick some random inputs that may or may not work, and then observe the results. If the output is different than we expect, we go back to our code to try and figure out why that is. Maybe our assumptions were bad, or maybe our code was incorrect. In either case, we can fix the error and try again. Informal testing is quick and easy, and doesn’t require much additional work to perform. However, informal testing is not very good, and can easily lead to errors in the code that are not properly caught and fixed. Believe me, after reviewing code from many students over the years, I am sure that informal testing is not at all adequate!</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Jun 2024 14:13:48 -0500</lastBuildDate>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/04-testing/02-manual-testing/video/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>