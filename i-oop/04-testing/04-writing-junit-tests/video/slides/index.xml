<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://textbooks.cs.ksu.edu/cc410/i-oop/04-testing/04-writing-junit-tests/video/slides/index.html</link>
    <description>JUnit Tests import static org.junit.jupiter.api.Assertions.assertEquals; import org.junit.jupiter.api.Test;&#xA;public class SquareTest{&#xA;@Test public void testSquareConstructorShouldSetLength(){ Square square = new Square(2.0); assertEquals(2.0, square.getLength()); } } Install Parameters Library dependencies { // Use JUnit Jupiter API for testing. testImplementation &#39;org.junit.jupiter:junit-jupiter-api:5.6.2&#39;, &#39;org.hamcrest:hamcrest:2.2&#39;, &#39;org.junit.jupiter:junit-jupiter-params&#39;&#xA;// Use JUnit Jupiter Engine for testing. testRuntimeOnly &#39;org.junit.jupiter:junit-jupiter-engine&#39;&#xA;// This dependency is used by the application. implementation &#39;com.google.guava:guava:29.0-jre&#39; } JUnit Parameterized Tests import static org.junit.jupiter.api.Assertions.assertEquals; import org.junit.jupiter.api.Test; import org.junit.jupiter.params.ParameterizedTest; import org.junit.jupiter.params.provider.ValueSource;&#xA;public class StoveTest{&#xA;@ParameterizedTest @ValueSource(doubles = {1.0, 2.1, 3.2, 4.3, 5.9}) public void SetSquareLengthToPositiveValue(double setting){ Square square = new Square(setting); assertEquals(setting, square.getLength()); } } JUnit Assertions assertTrue | assertFalse assertEquals | assertNotEquals assertArrayEquals assertLinesMatch assertNull | assertNotNull assertSame | assertNotSame Catching Exceptions @Test void exceptionTesting() { Exception exception = assertThrows( IllegalArgumentException.class, () -&gt; new Square(-1.0)); assertEquals(&#34;Length cannot be negative&#34;, exception.getMessage()); } Checking Output @Test public void testHelloWorldMain() { HelloWorld hw = new HelloWorld();&#xA;final PrintStream systemOut = System.out; ByteArrayOutputStream testOut = new ByteArrayOutputStream(); System.setOut(new PrintStream(testOut));&#xA;hw.main(new String[]{});&#xA;System.setOut(systemOut);&#xA;assertEquals(testOut.toString(), &#34;Hello World\n&#34;); }</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/04-testing/04-writing-junit-tests/video/slides/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>