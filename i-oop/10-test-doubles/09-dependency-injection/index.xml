<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dependency Injection :: CC 410 Textbook</title>
    <link>https://textbooks.cs.ksu.edu/cc410/i-oop/10-test-doubles/09-dependency-injection/index.html</link>
    <description>One other important topic to cover in unit tests is dependency injection. In short, dependency injection is a way that we can build our classes so that the objects they depend on can be added to the class from outside. In that way, we can change them as needed in our unit tests as a way to test functionality using test doubles.&#xA;Consider the following example:&#xA;â€‹ Java Python public class Teacher { private Gradebook gradebook; private List&lt;Student&gt; studentList; public Teacher() { this.gradebook = new Gradebook(&#34;Course Name&#34;); this.studentList = new List&lt;&gt;(); } public void addStudent(Student s) { this.studentList.add(s); } public void submitGrades() { for (Student s : this.studentList) { this.gradebook.gradeStudent(s); } } } class Teacher: def __init__(self) -&gt; None: self.__gradebook: Gradebook = Gradebook() self.__student_list: List[Student] = list() def add_student(self, s: Student) -&gt; None: self.__student_list.append(s) def submit_grades(self) -&gt; None: for s in self.__student_list: self.__gradebook.grade_student(s) In this Teacher class, we see a private Gradebook instance. That instance is not accessible outside the class, so we cannot directly interact with it in our unit tests, at least without violating the security principles of the class it is in. So, if we want to test that the submitGrades() method properly grades every student in the studentList, we would need some way to replace the gradebook attribute with a test double.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/10-test-doubles/09-dependency-injection/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>