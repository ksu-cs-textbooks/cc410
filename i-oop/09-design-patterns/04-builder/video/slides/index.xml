<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://textbooks.cs.ksu.edu/cc410/i-oop/09-design-patterns/04-builder/video/slides/</link><description>Builder Pattern Build Complex Objects Separate Object Creation from Other Code Reduce Complex Links Between Objects Target Classes class Crayon:
String color class CrayonBox:
List[Crayon] contents
function addCrayon(Crayon c): contents.add(c) Builder Interface interface CrayonBoxBuilder:
function buildBox() Builder Class class EightBoxBuilder implements CrayonBoxBuilder:
function buildBox(): CrayonBox box = new CrayonBox() box.add(new Crayon("White")) box.add(new Crayon("Black")) box.add(new Crayon("Red")) box.add(new Crayon("Orange")) box.add(new Crayon("Yellow")) box.add(new Crayon("Green")) box.add(new Crayon("Blue")) box.add(new Crayon("Violet")) Builder Class class SixteenBoxBuilder implements CrayonBoxBuilder:</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/09-design-patterns/04-builder/video/slides/index.xml" rel="self" type="application/rss+xml"/></channel></rss>