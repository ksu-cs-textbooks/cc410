<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://textbooks.cs.ksu.edu/cc410/i-oop/09-design-patterns/07-iterator/video/slides/</link><description>Iterator Pattern Make a Class Iterable Use with For Each Loops Act Like a Collection Iterator Class to Keep Track of Location Typically Includes next Method Defined Way To Find End Other Methods May Be Included Iterable Interface class CrayonBox implements Iterable[Crayon]:
List[Crayon] contents
function addCrayon(Crayon c): contents.add(c)
function getIterator(): return contents.getIterator()
function get(int i): return contents[i]
function contains(Crayon c): return contents.contains(c)
function size(): return contents.size() Using an Iterable class Main:</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cc410/i-oop/09-design-patterns/07-iterator/video/slides/index.xml" rel="self" type="application/rss+xml"/></channel></rss>