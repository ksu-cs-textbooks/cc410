<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web APIs :: CC 410 Textbook</title>
    <link>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/index.html</link>
    <description>Making data openly available and easily accessible!</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Jun 2024 14:13:48 -0500</lastBuildDate>
    <atom:link href="https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/01-introduction/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/01-introduction/index.html</guid>
      <description>In this chapter, we’re going to take a higher-level look at Web APIs and their place in the larger ecosystem. Web APIs have become a ubiquitous part of technology today, and it is very likely that most developers will be tasked with either writing their own API or using another API at some point in their career. Therefore, a larger understanding of Web APIs is a very useful skill to build.</description>
    </item>
    <item>
      <title>Web APIs</title>
      <link>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/02-web-apis/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/02-web-apis/index.html</guid>
      <description>Video Materials&#xA;As the name implies, a web API is simply an interface for accessing and modifying resources stored on a web server. So, from a certain point of view, we could think of the basic HTTP itself as a web API. However, traditionally web APIs are meant to be built on top of HTTP itself – HTTP defines how web servers and web clients can communicate in general, but a web API uses additional information in the structure of the request, such parameters included as part of the URL or the body of the request, to specify exactly what resources should be affected and the action to be performed on those resources.</description>
    </item>
    <item>
      <title>REST</title>
      <link>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/03-rest/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/03-rest/index.html</guid>
      <description>Thus far, we’ve mainly discussed the REST architectural style for web APIs, since it has become commonly used on the internet today. However, let’s briefly look at one other architectural style for web APIs and see how it compares to REST.&#xA;1&#xA;SOAP The Simple Object Access Protocol, or SOAP, is a standardized protocol for exchanging information between web servers and clients that was first developed in 1998 (a few years before REST was first written about). So, unlike REST, which is simply an architectural style without an underlying standard, SOAP was designed to have a specific standard and implementation.</description>
    </item>
    <item>
      <title>Documenting Web APIs</title>
      <link>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/04-documenting-web-apis/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/04-documenting-web-apis/index.html</guid>
      <description>Web APIs are very useful parts of the internet today, but their usefulness can be limited if they aren’t properly documented. Thankfully, there are many standards available for documenting how to use and interact with RESTful web APIs.&#xA;RESTful API Description Languages Wikipedia has a list of RESTful API Description Lanuages, or DLs, that are meant to provide a formal way for documenting the structure and usage of a web API. This is very similar to the standard format we use for documentation comments in our code - if they are structured correctly, we can use other tools such as javadoc or pdoc to generate additional resources for us, such as developer documentation.</description>
    </item>
    <item>
      <title>Handling Authentication</title>
      <link>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/05-handling-authentication/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/05-handling-authentication/index.html</guid>
      <description>Another important concept related to web APIs is handing authentication. First, let’s review a bit about what authentication is and why it is important.&#xA;Authentication vs. Authorization In computer security, we commonly use two related terms to describe limits placed on access to a particular resource.&#xA;Authentication refers to providing information that confirms the user’s identity. This could be through the use of a password or some other secure token that is only known to the user, or through some other means. Authorization refers to determining if the user has access to a particular resource. So, a user must first be authenticated to determine their identity. Then, the application must determine if that user is authorized to use the resource requested.</description>
    </item>
    <item>
      <title>Using a Web API</title>
      <link>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/06-using-web-apis/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/06-using-web-apis/index.html</guid>
      <description>Video Materials&#xA;Finally, now that we’ve covered all of the aspects related to web APIs and how they are implemented, let’s look at a quick example for how we can use a web API to interact with resources stored on the web.&#xA;Finding an API There are many great resources that can be used to locate a particular web API on the internet. Using search engines such as Google is one option, but there have also been many attempts to generate a directory of the most used and most useful web APIs such as the Public APIs project on GitHub.</description>
    </item>
    <item>
      <title>Summary</title>
      <link>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/07-summary/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://textbooks.cs.ksu.edu/cc410/iii-web/18-web-apis/07-summary/index.html</guid>
      <description>In this chapter, we covered some more information about web APIs. We discovered how they are structured and how we can interact with them in our applications. We even learned a bit about how they handle documentation and authentication.&#xA;Of course, this merely scratches the surface of information related to web APIs. A later course in the Computational Core curriculum, CC 515, covers web application development and goes in-depth about how to build and use web APIs using a RESTful architecture.</description>
    </item>
  </channel>
</rss>